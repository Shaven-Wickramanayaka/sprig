/*
First time? Check out the tutorial game:
https://sprig.hackclub.com/gallery/getting_started

@title: Encircle
@author: Shaven Wickramanayaka
@tags: []
@addedOn: 2025-00-00
*/

const player1 = "p";
const player2 = "2";
const block1 = "b";
const block2 = "h";
const boundary = "r";
const bgMusic = tune`
217.3913043478261: D5-217.3913043478261 + E5-217.3913043478261,
217.3913043478261: F5-217.3913043478261 + G5-217.3913043478261 + D5-217.3913043478261,
217.3913043478261: A4~217.3913043478261 + G4~217.3913043478261 + D5-217.3913043478261,
217.3913043478261: B4~217.3913043478261 + A4~217.3913043478261 + G4~217.3913043478261 + D5-217.3913043478261,
217.3913043478261: B4~217.3913043478261 + G4~217.3913043478261 + D4~217.3913043478261 + C4~217.3913043478261,
217.3913043478261: B4~217.3913043478261 + G4~217.3913043478261 + F4~217.3913043478261 + D4~217.3913043478261 + G5-217.3913043478261,
217.3913043478261: B4~217.3913043478261 + F4~217.3913043478261 + D4~217.3913043478261 + G5-217.3913043478261 + A5-217.3913043478261,
217.3913043478261: B4~217.3913043478261 + F4~217.3913043478261 + D4~217.3913043478261,
217.3913043478261: F4~217.3913043478261 + E4~217.3913043478261 + D4~217.3913043478261 + E5^217.3913043478261 + B5^217.3913043478261,
217.3913043478261: F5/217.3913043478261,
217.3913043478261: G5/217.3913043478261,
217.3913043478261: B4~217.3913043478261 + A4~217.3913043478261 + G4~217.3913043478261 + F4~217.3913043478261 + E4~217.3913043478261,
217.3913043478261: A4~217.3913043478261,
217.3913043478261: A4~217.3913043478261 + G4~217.3913043478261 + F4~217.3913043478261 + E4~217.3913043478261 + D4~217.3913043478261,
217.3913043478261: E5^217.3913043478261,
217.3913043478261: F5/217.3913043478261,
217.3913043478261: A4~217.3913043478261 + G4~217.3913043478261 + F4~217.3913043478261 + E4~217.3913043478261 + G5-217.3913043478261,
217.3913043478261: A4~217.3913043478261 + E4~217.3913043478261 + G5^217.3913043478261,
217.3913043478261: E4~217.3913043478261 + F4~217.3913043478261 + G4~217.3913043478261 + A4~217.3913043478261 + F5^217.3913043478261,
217.3913043478261: F4~217.3913043478261,
217.3913043478261: E4~217.3913043478261 + F5/217.3913043478261 + E5-217.3913043478261,
217.3913043478261: F5/217.3913043478261,
217.3913043478261: A4~217.3913043478261 + G4~217.3913043478261 + G5/217.3913043478261,
217.3913043478261: G4~217.3913043478261 + F4~217.3913043478261 + E5^217.3913043478261 + D5^217.3913043478261,
217.3913043478261: E4~217.3913043478261 + F4~217.3913043478261 + G4~217.3913043478261 + A4~217.3913043478261 + B4~217.3913043478261,
217.3913043478261,
217.3913043478261: E5-217.3913043478261,
217.3913043478261: A4~217.3913043478261 + G4~217.3913043478261 + F4~217.3913043478261 + E4~217.3913043478261 + D5-217.3913043478261,
217.3913043478261: A4~217.3913043478261 + E4~217.3913043478261 + D5-217.3913043478261,
217.3913043478261: C5-217.3913043478261,
217.3913043478261: A4~217.3913043478261 + G4~217.3913043478261 + F4~217.3913043478261 + E4~217.3913043478261,
217.3913043478261: G4~217.3913043478261 + F4~217.3913043478261`;
const blueMove = tune`
44.052863436123346: A5^44.052863436123346 + G5^44.052863436123346,
1365.6387665198238`;
const redMove = tune`
44.052863436123346: A5~44.052863436123346 + G5~44.052863436123346,
1365.6387665198238`;
const playback = playTune(bgMusic, Infinity)
setLegend(
  [player1, bitmap`
................
................
................
....55555555....
...5555555555...
..552222222255..
..552202202255..
..552202202255..
..552202202255..
..552222222255..
..552222222255..
..552222222255..
...5555555555...
....55555555....
.....5....5.....
.....5....5.....`],
  [player2, bitmap`
................
................
................
....33333333....
...3333333333...
..332222222233..
..332202202233..
..332202202233..
..332202202233..
..332222222233..
..332222222233..
..332222222233..
...3333333333...
....33333333....
.....3....3.....
.....3....3.....`],
  [block1, bitmap`
................
.00000000000000.
.05555555555550.
.05555555555550.
.05555555555550.
.05555555555550.
.05555555555550.
.05555555555550.
.05555555555550.
.05555555555550.
.05555555555550.
.05555555555550.
.05555555555550.
.05555555555550.
.00000000000000.
................`],
  [block2, bitmap`
................
.00000000000000.
.03333333333330.
.03333333333330.
.03333333333330.
.03333333333330.
.03333333333330.
.03333333333330.
.03333333333330.
.03333333333330.
.03333333333330.
.03333333333330.
.03333333333330.
.03333333333330.
.00000000000000.
................`],
  [boundary, bitmap`
................
.00000000000000.
.0LLLLLLLLLLLL0.
.0LLLLLLLLLLLL0.
.0LLLLLLLLLLLL0.
.0LLLLLLLLLLLL0.
.0LLLLLLLLLLLL0.
.0LLLLLLLLLLLL0.
.0LLLLLLLLLLLL0.
.0LLLLLLLLLLLL0.
.0LLLLLLLLLLLL0.
.0LLLLLLLLLLLL0.
.0LLLLLLLLLLLL0.
.0LLLLLLLLLLLL0.
.00000000000000.
................`],

)
setSolids([player1, player2, block1, block2, boundary])

var level = 0
const levels = [
  map`
...............................
..bbb.b..b..bb.bbb..bb.b...bbb.
..b...bb.b.b....b..b...b...b...
..bb..b.bb.b....b..b...b...bb..
..b...b..b.b....b..b...b...b...
..bbb.b..b..bb.bbb..bb.bbb.bbb.
...............................
...............................
...............................
...............................
...............................
...............................
...............................
...............................
...............................
...............................
...............................
...............................
...............................
...............................`,
  map`
rrrrrrrrrrrrrrr
r.............r
r.b..b.b.h..h.r
r...b..h..h...r
r.h.........b.r
r..p.b...h.2..r
r....b...h....r
r.....b.h.....r
r.b.b.....h.h.r
r.............r
rrrrrrrrrrrrrrr`,

]
setMap(levels[level])
if (level == 0) {
  addText("By Shaven W", { x: 5, y: 6, color: color`L` });
  addText("W to start", { x: 5, y: 10, color: color`F` });

}

setPushables({
  [player1]: [block1, player2],
  [player2]: [block2, player1],
  [block1]: [block1],
  [block2]: [block2],
})

onInput("s", () => {
  getFirst(player1).y += 1
  playTune(blueMove)
})
onInput("w", () => {
  if (level === 0) {
    // start the game
    level = 1;
    clearText();
    playback.end()
    setMap(levels[level]);
  } else {
    // in-game movement
    getFirst(player1).y -= 1;
    playTune(blueMove)
  }
});
onInput("a", () => {
  getFirst(player1).x -= 1;
  playTune(blueMove)
})
onInput("d", () => {
  getFirst(player1).x += 1;
  playTune(blueMove)
})

onInput("k", () => {
  getFirst(player2).y += 1;
  playTune(redMove)
})
onInput("i", () => {
  getFirst(player2).y -= 1
  playTune(redMove)
})
onInput("j", () => {
  getFirst(player2).x -= 1
  playTune(redMove)
})
onInput("l", () => {
  getFirst(player2).x += 1
  playTune(redMove)
});

function isSurrounded(playerd, blockd) {
  const player = getFirst(playerd);
  const offsets = [
    { dx: 0, dy: -1 },
    { dx: 1, dy: 0 },
    { dx: 0, dy: 1 },
    { dx: -1, dy: 0 },
  ];
  const surrounded = offsets.every(({ dx, dy }) => {
    const x = player.x + dx;
    const y = player.y + dy;
    const hasBlock = getAll(blockd).some(b => b.x === x && b.y === y);
    const hasBoundary = getAll("r").some(b => b.x === x && b.y === y);

    return hasBlock || hasBoundary;
  });



  if (surrounded && playerd == "p") {
    addText("Player 2 Won", { x: 8, y: 0, color: color`3` });
  } else if (surrounded && playerd == "2") {
    addText("Player 1 Won", { x: 4, y: height() + 2, color: color`5` });
  }
}

afterInput(() => {
  isSurrounded("p", "h");
  isSurrounded("2", "b");
});